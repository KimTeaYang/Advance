/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbc_memo;

import java.awt.Color;
import java.awt.Font;
import java.awt.PopupMenu;
import java.awt.event.ItemEvent;
import java.io.*;

import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

import com.sun.javafx.fxml.builder.JavaFXFontBuilder;
import com.sun.webkit.ColorChooser;

import javafx.scene.control.ComboBox;
/* JTextPane을 사용하면 폰트, 굵기, 기울임, 정렬 같은 다양한 서식을 사용할 수 있다.
 *  - 사용절차
 *   1. SimpleattributeSet 객체를 생성한다.
 *   2. StyleConstants클래스의 static메소드를 통해 1번 객체의 속성을 설정한다.
 *   3. 이를 JTextPane의 문서모델 => StyledDocument의 메소드를 통해 적용한다.
 * */
/**
 *
 * @author 1class-18
 */
public class MyNotePad extends javax.swing.JFrame {
	FontSet font = new FontSet();
	
	// JTextPane에 스타일 적용을 위한 멤버변수 선언
	StyledDocument doc; // JTextPane의 문서모델 객체
	SimpleAttributeSet attr;
    /**
     * Creates new form MyNotePad
     */
    public MyNotePad() {
    	super("::MyNotePad v1.1::");
        initComponents();
        //tp의 문서 모델 얻기
        doc = tp.getStyledDocument();
        
        /*
        // attr에 속성 부여
        attr = new SimpleAttributeSet();
        StyleConstants.setFontFamily(attr, "궁서체");
        StyleConstants.setFontSize(attr, 25);
        
        //속성을 문서에 적용
        doc.setCharacterAttributes(0, 7, attr, true);
        
        attr = new SimpleAttributeSet();
        StyleConstants.setForeground(attr, Color.red);
        StyleConstants.setBackground(attr, Color.YELLOW);
        StyleConstants.setUnderline(attr, true);
        StyleConstants.setItalic(attr, true);
        doc.setCharacterAttributes(7, 7, attr, true);
        
        // 중앙정렬 적용
        attr = new SimpleAttributeSet();
        StyleConstants.setAlignment(attr, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, tp.getText().length(), attr, true);
        */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
        jToolBar1 = new javax.swing.JToolBar();
        btNew = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btOpen = new javax.swing.JButton();
        btColor = new javax.swing.JButton();
        comboFont = new javax.swing.JComboBox<>();
        comboSize = new javax.swing.JComboBox<>();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btHelp = new javax.swing.JButton();
        sp = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        tfDir = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tp = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        btNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.png"))); // NOI18N
        btNew.setFocusable(false);
        btNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btNew);

        btSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btSave.setFocusable(false);
        btSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btSave);

        btOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        btOpen.setFocusable(false);
        btOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btOpen);

        btColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Y.png"))); // NOI18N
        btColor.setFocusable(false);
        btColor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btColor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btColorActionPerformed(evt);
            }
        });
        jToolBar1.add(btColor);

        comboFont.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sans-serif", "Consolas", "굴림체", "궁서체" }));
        comboFont.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFontItemStateChanged(evt);
            }
        });
        comboFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFontActionPerformed(evt);
            }
        });
        jToolBar1.add(comboFont);

        comboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "16", "20", "24", "30" }));
        comboSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSizeItemStateChanged(evt);
            }
        });
        jToolBar1.add(comboSize);
        jToolBar1.add(filler1);

        btHelp.setText("Help");
        btHelp.setFocusable(false);
        btHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHelpActionPerformed(evt);
            }
        });
        jToolBar1.add(btHelp);

        sp.setDividerSize(4);
        sp.setOneTouchExpandable(true);
        sp.setPreferredSize(new java.awt.Dimension(115, 595));

        jPanel1.setPreferredSize(new java.awt.Dimension(210, 593));

        tfDir.setBorder(javax.swing.BorderFactory.createTitledBorder("Directory"));
        tfDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDirActionPerformed(evt);
            }
        });

        lst.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 153), 3));
        lst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lst);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tfDir, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tfDir, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        sp.setLeftComponent(jPanel1);
       
        jScrollPane1.setViewportView(tp);

        sp.setRightComponent(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btColorActionPerformed
        JColorChooser jcc = new JColorChooser();
        Color color =jcc.showDialog(this, "color choice", Color.RED);
        font.setColor(color);
        
        setStyle();
    }

    private void comboFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFontActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboFontActionPerformed

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        tp.setText("");
    }
    
    JFileChooser fc = new JFileChooser("c:/myjava");
    
    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
    	
        int select = fc.showSaveDialog(this);
        if(select==JFileChooser.CANCEL_OPTION) {
        	showMsg("저장이 취소되었습니다.");
        	return;
        }
        
        File file = fc.getSelectedFile();
        String path = file.getAbsolutePath();
        
        saveFile(path);
    }
    
    public void saveFile(String path) {
    	try {
			FileWriter fw = new FileWriter(path);
			PrintWriter pw = new PrintWriter(fw, true);
			
			pw.write(tp.getText());
			tp.setText("");
			
			pw.close();
			fw.close();
			
			showMsg("저장 완료");
		} catch (IOException e) {
			e.printStackTrace();
		}
    }

    private void btOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenActionPerformed
    	
    	fc.setFileFilter(new FileFilter() {
			@Override
			public String getDescription() {
				return null;
			}
			@Override
			public boolean accept(File f) {
				int index = f.getName().lastIndexOf(".");
				if(f.isDirectory()) {
					return true;
				}
				if(index>0) {
					String ext = f.getName().substring(index);
					if(ext.equals(".txt")||ext.equals(".java")
							||ext.equals(".html")) {
						return true;
					}
				}
				return false;
			}
		});
    	
        int select = fc.showOpenDialog(this);
        if(select==JFileChooser.CANCEL_OPTION) {
        	showMsg("선택한 파일이 없습니다.");
        	return;
        }
        
        File file = fc.getSelectedFile();
        String path = file.getAbsolutePath();
        
        try {
			readFile(path);
		} catch (IOException e) {
			e.printStackTrace();
		}
    }

    private void comboFontItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFontItemStateChanged
        int mode = evt.getStateChange();
        
        if(mode==ItemEvent.SELECTED) {
        	int index = comboFont.getSelectedIndex();
        	String fontName="";
        	switch(index) {
	    		case 0:
	    			font.setName("sans-serif");
	    			break;
	    		case 1:
	    			font.setName("Consolas");
	    			break;
	    		case 2:
	    			font.setName("굴림체");
	    			break;
	    		case 3:
	    			font.setName("궁서체");
	    			break;
        	}
        	setStyle();
        }
    }

    public void setStyle(){
    	attr = font.att();
    	
    	int start = tp.getSelectionStart();
    	int end = tp.getSelectionEnd();
    	int len = tp.getSelectionEnd()-tp.getSelectionStart();
    	
    	if(start==end) {
    		len=tp.getText().length();
    		doc.setCharacterAttributes(0,len,attr, true);
    	}else {
    		doc.setCharacterAttributes(start,len,attr, true);
    	}
    }
    private void comboSizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSizeItemStateChanged
    	int mode = evt.getStateChange();
        
        if(mode==ItemEvent.SELECTED) {
        	int index = comboSize.getSelectedIndex();
        	
        	switch(index) {
	    		case 0:
	    			font.setSize(12);
	    			break;
	    		case 1:
	    			font.setSize(16);
	    			break;
	    		case 2:
	    			font.setSize(20);
	    			break;
	    		case 3:
	    			font.setSize(24);
	    			break;
	    		case 4:
	    			font.setSize(30);
	    			break;
        	}
        	setStyle();
        }
    }
    
    private void btHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHelpActionPerformed
        showMsg("작성자: 김태양\n버전: v1.1\n작성일:2018-11-06");
    }
    
    public void showMsg(String msg) {
    	JOptionPane.showMessageDialog(this,msg);
    }

    private void tfDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDirActionPerformed
        String str = tfDir.getText();
        
        if(str.trim().isEmpty()||str==null) {
        	showMsg("디렉토리명을 입력하세요");
        	tfDir.requestFocus();
        	return;
        }
        
        File file = new File(str.trim());
        boolean isDir = file.isDirectory();
        
        if(!isDir) {
        	showMsg("디렉토리명이 아닙니다.");
        	tfDir.setText("");
        	lst.setListData(new String[3]);
        	tfDir.requestFocus();
        	return;
        }
        
        String[] files = file.list();
    	lst.setListData(files);
    }

    private void lstValueChanged(javax.swing.event.ListSelectionEvent e) {//GEN-FIRST:event_lstValueChanged
    	boolean b = e.getValueIsAdjusting();
    	if(!b) return;
    	
    	String dir = tfDir.getText()+"/";
    	String fileName = lst.getSelectedValue();
    	String path = dir+fileName;
    	
    	int index = fileName.lastIndexOf(".");
    	
    	if(index<=0) return;
    	String ext = fileName.substring(index);
    	
    	if(ext.equals(".java")||ext.equals(".txt")||
    			ext.equals(".html")) {
    		try {
    			readFile(path);
			} catch (FileNotFoundException e1) {
				e1.printStackTrace();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
    	}
    	
    }
    
    public void readFile(String path) throws IOException {
    	FileReader fr = new FileReader(path);
		BufferedReader br = new BufferedReader(fr);
		
		String data="";
		String txt="";
		
		while((data=br.readLine())!=null) {
			txt+=data;
		}
		
		tp.setText(txt);
		
		br.close();
		fr.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyNotePad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btColor;
    private javax.swing.JButton btHelp;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btOpen;
    private javax.swing.JButton btSave;
    private javax.swing.JComboBox<String> comboFont;
    private javax.swing.JComboBox<String> comboSize;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JList<String> lst;
    private javax.swing.JSplitPane sp;
    private javax.swing.JTextField tfDir;
    private javax.swing.JTextPane tp;
    // End of variables declaration//GEN-END:variables
}
